package snowflake

const (
	UseRoleSQL               = "USE ROLE {{ROLE}};"
	TrackingHistorySQL       = "SELECT COMMIT_ID,MSG,EXEC_START, EXEC_END, EXEC_WHO, CHANGE_COUNT, CHANGE_SUCCESS, CHANGE_FAIL,COMPLETED, FAST_FORWARD FROM {{DATABASE}}.PLOW.COMMITS WHERE COMPLETED = 'TRUE' ORDER BY EXEC_END DESC"
	TrackingHistoryItemsSQL  = "SELECT COMMIT_ID, FILE_NAME, REF, HASH, STATUS, EXEC_TIME, MSG FROM %s.PLOW.CHANGE_LOG"
	InsertTrackingDetailSQL  = "INSERT INTO {{DATABASE}}.PLOW.CHANGE_LOG VALUES ('{{COMMIT}}', '{{FILE}}', '{{REF}}', '{{HASH}}', '{{STATUS}}','{{TIME}}','{{MSG}}','{{PARTIAL}}')"
	InsertTrackingInfoSQL    = "INSERT INTO {{DATABASE}}.PLOW.COMMITS VALUES ('{{COMMIT}}','{{MSG}}','{{START}}','{{END}}', '{{WHO}}', {{TOTAL}}, {{SUCCESS}}, {{FAIL}}, '{{COMPLETED}}', '{{FAST_FORWARD}}')"
	GetDatabasesSQL          = "SELECT * FROM {{DATABASE}}.PLOW.MANAGED_DATABASES;"
	GetSchemasSQL            = "SELECT SCHEMA_NAME FROM {{DATABASE}}.INFORMATION_SCHEMA.SCHEMATA"
	GetTablesViewsSQL        = "SELECT TABLE_SCHEMA, TABLE_NAME, TABLE_TYPE FROM {{DATABASE}}.INFORMATION_SCHEMA.TABLES"
	TableStructureCLeanUpSQL = "DROP TABLE IF EXISTS {{CHG_MGMT_DB}}.ORIGIN.{{NAME}}; DROP TABLE IF EXISTS {{CHG_MGMT_DB}}.VALIDATE.{{NAME}};"
	CreateMocTableSQL        = "CREATE TABLE {{CHG_MGMT_DB}}.ORIGIN.{{NAME}} LIKE {{DATABASE}}.{{SCHEMA}}.{{NAME}}"
	TableStructureVerifySQL  = `WITH ORIGIN (NAME, POS, NULLABLE, DTYPE, CHARLEN, PRECISION, SCALE) AS 
								(     
								SELECT COLUMN_NAME, ORDINAL_POSITION, IS_NULLABLE, DATA_TYPE, CHARACTER_MAXIMUM_LENGTH, NUMERIC_PRECISION, NUMERIC_SCALE
								FROM {{CHG_MGMT_DB}}.INFORMATION_SCHEMA.COLUMNS 
								WHERE TABLE_SCHEMA = 'ORIGIN' AND TABLE_NAME = '{{NAME}}'
								),
								TARGET (NAME, POS, NULLABLE, DTYPE, CHARLEN, PRECISION, SCALE) AS (  
									SELECT COLUMN_NAME, ORDINAL_POSITION, IS_NULLABLE, DATA_TYPE, CHARACTER_MAXIMUM_LENGTH, NUMERIC_PRECISION, NUMERIC_SCALE
									FROM {{CHG_MGMT_DB}}.INFORMATION_SCHEMA.COLUMNS
									WHERE TABLE_SCHEMA = 'VALIDATE' AND TABLE_NAME = '{{NAME}}'
								)
								SELECT * FROM ORIGIN O FULL OUTER JOIN TARGET T ON O.NAME = T.NAME;`
	CreateDatabaseSQL               = "CREATE DATABASE {{NAME}};"
	GrantDatabaseOwnershipSQL       = "GRANT OWNERSHIP ON DATABASE {{NAME}} TO ROLE {{ROLE}};"
	GrantUsageToRoleDatabaseSQL     = "GRANT USAGE ON DATABASE {{NAME}} TO ROLE {{ROLE}};"
	RevokeUsageToRoleDatabaseSQL    = "REVOKE USAGE ON DATABASE {{NAME}} FROM ROLE {{ROLE}};"
	GrantUsageToUserDatabaseSQL     = "GRANT USAGE ON DATABASE {{NAME}} TO USER \"{{USER}}\";"
	RevokeUsageToUserDatabaseSQL    = "REVOKE USAGE ON DATABASE {{NAME}} FROM USER \"{{USER}}\";"
	DropDatabaseSQL                 = "DROP DATABASE {{NAME}};"
	CreateSchemaSQL                 = "CREATE SCHEMA IF NOT EXISTS {{DATABASE}}.{{NAME}};"
	DropSchemaSQL                   = "DROP SCHEMA {{DATABASE}}.{{NAME}};"
	GrantUsageToRoleSchemaSQL       = "GRANT USAGE ON SCHEMA {{DATABASE}}.{{NAME}} TO ROLE {{ROLE}};"
	RevokeUsageToRoleSchemaSQL      = "REVOKE USAGE ON SCHEMA {{DATABASE}}.{{NAME}} FROM ROLE {{ROLE}};"
	GrantUsageToUserSchemaSQL       = "GRANT USAGE ON SCHEMA {{DATABASE}}.{{NAME}} TO USER \"{{USER}}\";"
	RevokeUsageToUserSchemaSQL      = "REVOKE USAGE ON SCHEMA {{DATABASE}}.{{NAME}} FROM USER \"{{USER}}\";"
	CreateRoleSQL                   = "CREATE ROLE IF NOT EXISTS {{ROLE}};"
	GrantRoleToRoleSQL              = "GRANT ROLE {{ROLE}} TO ROLE {{ROLENAME}};"
	GrantRoleToUserSQL              = "GRANT ROLE {{ROLE}} TO USER \"{{USER}}\";"
	RevokeRoleToRoleSQL             = "REVOKE ROLE {{ROLE}} FROM ROLE {{ROLENAME}};"
	RevokeRoleToUserSQL             = "REVOKE ROLE {{ROLE}} TO USER \"{{USER}}\";"
	GrantUsageOnWarehouseToRoleSQL  = "GRANT USAGE ON WAREHOUSE {{NAME}} TO ROLE {{ROLE}};"
	GrantUsageOnWarehouseToUserSQL  = "GRANT USAGE ON WAREHOUSE {{NAME}} TO USER {{USER}};"
	RevokeUsageOnWarehouseToRoleSQL = "REVOKE USAGE ON WAREHOUSE {{NAME}} FROM ROLE {{ROLE}};"
	RevokeUsageOnWarehouseToUserSQL = "REVOKE USAGE ON WAREHOUSE {{NAME}} FROM USER {{USER}};"
	DropDefaultPublicSchemaSQL      = "DROP SCHEMA {{NAME}}.PUBLIC;"
)
